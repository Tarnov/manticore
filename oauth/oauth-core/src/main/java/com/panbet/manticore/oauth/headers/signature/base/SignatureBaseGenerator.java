package com.panbet.manticore.oauth.headers.signature.base;


import com.panbet.manticore.oauth.headers.methodParameters.MethodParameter;

import java.net.URI;
import java.util.List;


/**
 * Signature base generator creates a Signature Base String -
 * a consistent reproducible concatenation of the request
 * elements into a single string.
 * This string is used as an input in hashing or signing algorithms.
 * <p>
 * The Signature Base String is generated by concatenating the
 * following items in order into a single string.
 * <p>
 * 1. The HTTP request method used to send the request. Value MUST be uppercase, for example: HEAD, GET , POST, etc.
 * 2. The request URL.
 * 3. The normalized request parameters string.
 * <p>
 * Each item is encoded and separated by an '&' character (ASCII code 38), even if empty.
 * <p>
 * See <a href="http://oauth.net/core/1.0a/">http://oauth.net/core/1.0a/</a> for
 * OAuth 1.0a specification details.
 */
public interface SignatureBaseGenerator {
    /**
     * Creates a Signature Base String from supplied items.
     *
     * @param httpMethod - the HTTP request method used to send the request.
     * @param requestUri - The request URL.
     * @param parameters - list of request parameters. All request parameters
     *                   must be normalized during Signature Base String generation
     *                   in method implementation.
     * @return - generated Signature Base String
     */
    String generateSignatureBase(final String httpMethod, final URI requestUri, final List<MethodParameter> parameters);
}
